{
  "name": "noxora",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "test:rbac:auto": "start-server-and-test dev http://localhost:3000/api/health test:rbac",
    "test:rbac:local": "cross-env BASE_URL=http://localhost:3000 tsx ./scripts/test.rbac.mjs",
    "sync:env": "node scripts/sync-env.js",
    "postinstall": "node scripts/sync-env.js",
    "typecheck:s5": "tsc -p tsconfig.s5.json",
    "seed:s6:min": "tsx scripts/seed.s6.min.ts",
    "seed:s6:employee": "tsx scripts/seed.s6.employee.ts",
    "test:public:barbershop": "pwsh ./scripts/test_public_barbershop.ps1",
    "test:public:availability": "pwsh ./scripts/test_public_availability.ps1",
    "dev": "next dev",
    "build": "prisma generate && next build",
    "start": "next start",
    "lint": "next lint",
    "db:rls": "psql $DATABASE_URL -f scripts/rls.sql",
    "db:indices": "psql $DATABASE_URL -f scripts/indices.sql",
    "db:test-rls": "psql $DATABASE_URL -f scripts/test-rls.sql",
    "db:prisma:generate": "prisma generate",
    "prisma:gen": "prisma generate",
    "db:migrate": "drizzle-kit push",
    "win:check:env": "powershell -NoLogo -NoProfile -Command \"if (-not (Test-Path .env.local)) { throw 'Falta .env.local' }; if (-not (Select-String -Path .env.local -Pattern '^DATABASE_URL=')) { throw 'DATABASE_URL ausente' }\"",
    "db:status": "drizzle-kit introspect",
    "db:deploy": "prisma migrate deploy",
    "dev:kill": "powershell -NoLogo -NoProfile -Command \"Get-Process node -ErrorAction SilentlyContinue | Stop-Process -Force\"",
    "seed:owner": "npx tsx ./scripts/seed.owner.ts",
    "seed:testdata": "npx tsx ./scripts/create-test-data.ts",
    "db:migrate:create": "prisma migrate dev -n update-refresh-tokens --create-only",
    "db:reset:dev": "prisma migrate reset --force",
    "db:diff:sql": "prisma migrate diff --from-url \"$DATABASE_URL\" --to-schema-datamodel prisma/schema.prisma --script > prisma/migrations/_diff.sql",
    "fix:migrate:resync": "powershell -NoLogo -NoProfile -ExecutionPolicy Bypass -File ./scripts/fix-migrate-resync.ps1",
    "db:prisma:migrate": "prisma migrate deploy",
    "db:prisma:studio": "prisma studio",
    "db:studio": "drizzle-kit studio",
    "db:seed": "psql $DATABASE_URL -f scripts/init-db.sql",
    "db:generate": "drizzle-kit generate",
    "db:push": "drizzle-kit push",
    "db:drop": "drizzle-kit drop",
    "db:check": "drizzle-kit check",
    "db:up": "drizzle-kit up",
    "db:down": "drizzle-kit down",
    "audit:setup": "powershell -ExecutionPolicy Bypass -File scripts/run-migrations.ps1",
    "audit:test": "npm run dev & timeout 5 && curl -s http://localhost:3000/audit | grep -q 'Sistema de Auditoria' && echo '✅ Auditoria funcionando' || echo '❌ Auditoria com problemas'",
    "auth:test": "node scripts/test-auth.js",
    "tenant:test": "node scripts/test-tenant.js",
    "cache:test": "node scripts/test-cache.js",
    "rate-limit-lock:test": "node scripts/test-rate-limit-locks.js",
    "billing:test": "node scripts/test-billing.js",
    "notifications:test": "node scripts/test-notifications.js",
    "ui:test": "node scripts/test-ui.js",
    "observability:test": "node scripts/test-observability.js",
    "seed:prisma": "node scripts/seed-prisma.js",
    "seed:audit": "node scripts/test-with-audit.js",
    "seed:sql": "psql $env:DATABASE_URL -f scripts/seed-with-audit.sql",
    "seed:audit:ps1": "powershell -ExecutionPolicy Bypass -File scripts/seed-with-audit.ps1",
    "smoke:test": "node scripts/smoke-tests.js",
    "setup:complete": "node scripts/setup-and-test.js",
    "test:e2e": "node --no-warnings ./scripts/e2e.mjs",
    "test:refresh": "node --no-warnings ./scripts/test.refresh.mjs",
    "test:tenant": "node --no-warnings ./scripts/test.tenant.mjs",
    "test:rbac": "tsx -r tsconfig-paths/register ./scripts/test.rbac.mjs",
    "test:lockout": "node --no-warnings ./scripts/test.lockout.mjs",
    "test:reset": "node --no-warnings ./scripts/test.reset.mjs",
    "test:cors": "node --no-warnings ./scripts/test.cors.mjs",
    "test:security": "node --no-warnings ./scripts/security/run.mjs",
    "test:security:jwt": "node --no-warnings ./scripts/security/jwt.mjs",
    "test:security:tenant": "node --no-warnings ./scripts/security/tenant.mjs",
    "test:security:rbac": "node --no-warnings ./scripts/security/rbac.mjs",
    "test:security:lockout": "node --no-warnings ./scripts/security/lockout.mjs",
    "test:security:cors": "node --no-warnings ./scripts/security/cors_csrf.mjs",
    "test:all": "node --no-warnings ./scripts/run.all.mjs",
    "audit:version": "node --no-warnings ./scripts/standards/audit.version.mjs",
    "test:error-shape": "node --no-warnings ./scripts/standards/test.error-shape.mjs",
    "test:pagination": "node --no-warnings ./scripts/standards/test.pagination.mjs",
    "test:idempotency": "node --no-warnings ./scripts/standards/test.idempotency.mjs",
    "test:openapi": "node --no-warnings ./scripts/standards/test.openapi.mjs",
    "test:standards": "npm run audit:version && npm run test:error-shape && npm run test:pagination && npm run test:idempotency && npm run test:openapi",
    "test:booking:public": "node --no-warnings ./scripts/public_booking/run.mjs",
    "test:outbox": "node --no-warnings ./scripts/outbox/run.mjs",
    "worker:outbox": "node --no-warnings ./scripts/outbox/worker.mjs",
    "stripe:check-key": "node --no-warnings ./scripts/stripe/check-key.mjs",
    "stripe:webhook:test": "node --no-warnings ./scripts/stripe/webhook.test.mjs",
    "stripe:products-prices": "node --no-warnings ./scripts/stripe/products-prices.mjs",
    "audit:ratelimit:static": "node --no-warnings ./scripts/rate_limit/audit.static.mjs",
    "test:ratelimit": "node --no-warnings ./scripts/rate_limit/test.mjs",
    "test:reporting": "node --no-warnings ./scripts/reporting/run.mjs",
    "test:reporting:qa": "node --no-warnings ./scripts/reporting/qa-complete.mjs",
    "test:reporting:qa:simple": "node --no-warnings ./scripts/reporting/qa-simplified.mjs",
    "test:performance:cache": "node --no-warnings ./scripts/performance/qa-cache.mjs",
    "test:performance:retest:q2": "node --no-warnings ./scripts/performance/retest-q2-invalidation.mjs",
    "test:performance:retest:q3": "node --no-warnings ./scripts/performance/retest-q3-availability.mjs",
    "test:performance:retest:q5": "node --no-warnings ./scripts/performance/retest-q5-timeout.mjs",
    "test:performance:retest:pool": "node --no-warnings ./scripts/performance/retest-pool-load.mjs",
    "test:performance:retest:all": "node --no-warnings ./scripts/performance/retest-all.mjs",
    "test:observability": "node --no-warnings ./scripts/observability/qa-observability.mjs",
    "test:observability:complete": "node --no-warnings ./scripts/observability/qa-complete.mjs",
    "test:security:validation": "node --no-warnings ./scripts/security/qa-validation.js",
    "test:security:audit": "node --no-warnings ./scripts/security/qa-audit.mjs",
    "test:security:api": "node --no-warnings ./scripts/security/api-security-tests.js",
    "test:security:local": "node --no-warnings ./scripts/security/local-security-tests.js",
    "test:security:all": "npm run test:security:validation && npm run test:security:audit && npm run test:security:api",
    "test:observability:error-loop": "node --no-warnings ./scripts/observability/one-liners.mjs error-loop",
    "test:observability:services-burst": "node --no-warnings ./scripts/observability/one-liners.mjs services-burst",
    "audit:tenant:static": "node --no-warnings ./scripts/tenant_guard/audit.static.mjs",
    "seed:tenants:db": "npx tsx ./scripts/seeds/seed.two-tenants.ts",
    "test:tenant:api": "node --no-warnings ./scripts/tenant_guard/api.mjs",
    "test:tenant:api:strict": "node --no-warnings ./scripts/tenant_guard/api.strict.mjs",
    "test:tenant:cross": "node --no-warnings ./scripts/tenant_guard/cross.mjs",
    "test:csrf": "node --no-warnings ./scripts/test.csrf.mjs",
    "test:tenantFilter": "npx tsx ./scripts/test.tenantFilter.mjs",
    "smoke:ps": "powershell -NoLogo -NoProfile -ExecutionPolicy Bypass -File ./scripts/smoke.ps1",
    "test:e2e:playwright": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:install": "playwright install",
    "test:e2e:report": "playwright show-report",
    "format:check": "prettier --check .",
    "format:fix": "prettier --write .",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:reset": "docker-compose down -v && docker-compose up -d",
    "setup:dev": "chmod +x scripts/dev-setup.sh && ./scripts/dev-setup.sh",
    "health": "curl -s http://localhost:3000/api/health | jq .",
    "test": "echo 'Testes não configurados ainda'",
    "type-check": "tsc --noEmit"
  },
  "dependencies": {
    "@babel/runtime": "^7.28.3",
    "@heroicons/react": "^2.2.0",
    "@neondatabase/serverless": "^0.9.0",
    "@opentelemetry/api": "^1.7.0",
    "@opentelemetry/auto-instrumentations-node": "^0.62.2",
    "@opentelemetry/exporter-metrics-otlp-http": "^0.204.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.204.0",
    "@opentelemetry/instrumentation": "^0.204.0",
    "@opentelemetry/instrumentation-http": "^0.204.0",
    "@opentelemetry/instrumentation-pg": "^0.56.1",
    "@opentelemetry/instrumentation-undici": "^0.14.0",
    "@opentelemetry/resources": "^2.1.0",
    "@opentelemetry/sdk-trace-base": "^2.1.0",
    "@opentelemetry/sdk-trace-node": "^2.1.0",
    "@opentelemetry/semantic-conventions": "^1.37.0",
    "@prisma/client": "^6.14.0",
    "@prisma/instrumentation": "^6.15.0",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@sentry/nextjs": "^10.10.0",
    "@stripe/stripe-js": "^2.0.0",
    "@types/uuid": "^10.0.0",
    "@upstash/redis": "^1.35.3",
    "axios": "^1.11.0",
    "bcryptjs": "^2.4.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "dotenv": "^17.2.2",
    "drizzle-kit": "^0.20.0",
    "drizzle-orm": "^0.29.0",
    "ioredis": "^5.7.0",
    "jose": "^6.0.13",
    "jsonwebtoken": "^9.0.0",
    "lucide-react": "^0.542.0",
    "next": "15.0.0",
    "node-fetch": "^2.7.0",
    "pino": "^9.9.4",
    "postgres": "^3.4.0",
    "react": "^18",
    "react-dom": "^18",
    "react-hot-toast": "^2.6.0",
    "redis": "^4.6.0",
    "stripe": "^14.25.0",
    "styled-components": "^6.1.19",
    "tailwind-merge": "^3.3.1",
    "tailwindcss-animate": "^1.0.7",
    "uuid": "^11.1.0",
    "validator": "^13.15.15",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@playwright/test": "^1.55.0",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.16",
    "@types/bcryptjs": "^2.4.6",
    "@types/jsonwebtoken": "^9.0.0",
    "@types/node": "^20.19.12",
    "@types/react": "^18.3.24",
    "@types/react-dom": "^18.3.7",
    "autoprefixer": "^10.4.21",
    "babel-plugin-styled-components": "^2.1.4",
    "eslint": "^8",
    "eslint-config-next": "15.0.0",
    "globby": "^14.1.0",
    "pino-pretty": "^13.1.1",
    "postcss": "^8.5.6",
    "prisma": "^6.14.0",
    "start-server-and-test": "^2.0.13",
    "tailwindcss": "^3.4.17",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.20.5",
    "typescript": "^5.9.2"
  }
}
