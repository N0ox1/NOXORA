name: Security Scans

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  codeql:
    uses: github/codeql-action/.github/workflows/codeql.yml@v3

  dependency-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --no-fund

      - name: Run npm audit
        run: npm audit --audit-level=high
        continue-on-error: false

      - name: Run OSV Scanner
        run: npx osv-scanner --recursive . --fail-on=critical

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: npm-audit-results
          path: npm-audit-results.json

  sast-semgrep:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Semgrep SAST
        uses: returntocorp/semgrep-action@v1
        with:
          config: |
            p/ci
            p/security-audit
            p/owasp-top-ten
          generateSarif: true
          severity: ERROR
          failOnError: true

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

      - name: Upload Semgrep results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: semgrep-results
          path: semgrep.sarif

  trivy-filesystem:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: fs
          scan-ref: '.'
          severity: CRITICAL,HIGH
          exit-code: '1'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: Upload Trivy results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-results
          path: trivy-results.sarif

  dast-zap:
    runs-on: ubuntu-latest
    needs: [dependency-audit, sast-semgrep, trivy-filesystem]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start application
        run: |
          npm run dev &
          sleep 30
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUDIT_HMAC_SECRET: ${{ secrets.AUDIT_HMAC_SECRET }}

      - name: Wait for application to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3000/api/v1/test-security; do sleep 2; done'

      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://127.0.0.1:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -m 5'
          fail_action: true

      - name: Upload ZAP results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: zap-results
          path: zap-results.html

  security-summary:
    runs-on: ubuntu-latest
    needs: [dependency-audit, sast-semgrep, trivy-filesystem, dast-zap]
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Security Scan Summary
        run: |
          echo "## Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "### CodeQL" >> $GITHUB_STEP_SUMMARY
          echo "✅ CodeQL analysis completed" >> $GITHUB_STEP_SUMMARY
          
          echo "### Dependency Audit" >> $GITHUB_STEP_SUMMARY
          if [ -f "npm-audit-results/npm-audit-results.json" ]; then
            echo "✅ npm audit completed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ npm audit failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "### SAST (Semgrep)" >> $GITHUB_STEP_SUMMARY
          if [ -f "semgrep-results/semgrep.sarif" ]; then
            echo "✅ Semgrep scan completed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Semgrep scan failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "### Filesystem Scan (Trivy)" >> $GITHUB_STEP_SUMMARY
          if [ -f "trivy-results/trivy-results.sarif" ]; then
            echo "✅ Trivy scan completed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Trivy scan failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "### DAST (ZAP)" >> $GITHUB_STEP_SUMMARY
          if [ -f "zap-results/zap-results.html" ]; then
            echo "✅ ZAP baseline scan completed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ ZAP scan failed" >> $GITHUB_STEP_SUMMARY
          fi

